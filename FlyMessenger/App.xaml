<Application x:Class="FlyMessenger.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:converters="clr-namespace:FlyMessenger.Converters"
             xmlns:language="clr-namespace:FlyMessenger.Resources.Languages"
             StartupUri="MainWindow.xaml">
    <Application.Resources>

        <!-- Resources -->
        <converters:MessagesCountConverter x:Key="MessagesCountConverter" />
        <converters:AnchorVisibilityConverter x:Key="AnchorVisibilityConverter" />
        <converters:DateTimeConverter x:Key="DateTimeConverter" />
        <converters:IntToStringConverter x:Key="IntToString" />

        <ResourceDictionary x:Key="Icons">
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/Resources/Icons/XamlIcons.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>

        <ResourceDictionary x:Key="Theme">
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/Resources/Colors/Light.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>


        <FontFamily x:Key="Alata">
            pack://application:,,,/FlyMessenger;,,,/Resources/Fonts/Alata-Regular.ttf#Alata
        </FontFamily>

        <!-- Sidebar Buttons Resources -->
        <Style x:Key="SideBarButton" TargetType="Button">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Name="Border" BorderThickness="0" Background="{TemplateBinding Background}">
                            <ContentPresenter VerticalAlignment="Center" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{DynamicResource Background-Element}" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- topBar Buttons Resources -->
        <Style x:Key="TopButtonBar" TargetType="Button">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Name="Border" BorderThickness="0" Background="{TemplateBinding Background}">
                            <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- ScrollBar Resources -->
        <Style TargetType="ScrollBar">
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="OverridesDefaultStyle" Value="True" />

            <Style.Triggers>
                <Trigger Property="Orientation" Value="Vertical">
                    <Setter Property="Width" Value="4" />
                    <Setter Property="Margin" Value="0 0 8 10" />
                    <Setter Property="Template" Value="{DynamicResource VerticalScrollBar}" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <ControlTemplate x:Key="VerticalScrollBar" TargetType="{x:Type ScrollBar}">
            <Grid>
                <Track Name="PART_Track" IsDirectionReversed="True">
                    <Track.Resources>
                        <Style x:Key="ScrollBarThumb" TargetType="Thumb">
                            <Setter Property="SnapsToDevicePixels" Value="True" />
                            <Setter Property="OverridesDefaultStyle" Value="True" />
                            <Setter Property="Focusable" Value="False" />
                            <Setter Property="IsTabStop" Value="False" />
                            <Setter Property="MinHeight" Value="16" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type Thumb}">
                                        <Border x:Name="border" CornerRadius="2"
                                                Background="{DynamicResource ScrollBar-Stroke}"
                                                Opacity="0.75"
                                                SnapsToDevicePixels="True" />

                                        <ControlTemplate.Triggers>
                                            <EventTrigger RoutedEvent="MouseEnter">
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <DoubleAnimation Storyboard.TargetName="border"
                                                                         Storyboard.TargetProperty="Opacity"
                                                                         To="1" Duration="0:0:0.1" />
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </EventTrigger>
                                            <EventTrigger RoutedEvent="MouseLeave">
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <DoubleAnimation Storyboard.TargetName="border"
                                                                         Storyboard.TargetProperty="Opacity"
                                                                         To="0.75" Duration="0:0:0.1" />
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </EventTrigger>
                                        </ControlTemplate.Triggers>

                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>

                        <Style x:Key="ScrollBarTrackUp" TargetType="{x:Type RepeatButton}">
                            <Setter Property="SnapsToDevicePixels" Value="True" />
                            <Setter Property="OverridesDefaultStyle" Value="True" />
                            <Setter Property="Focusable" Value="False" />
                            <Setter Property="IsTabStop" Value="False" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                                        <Border Background="{DynamicResource ScrollBar-Background}"
                                                CornerRadius="2 2 0 0" />
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>

                        <Style x:Key="ScrollBarTrackDown" TargetType="{x:Type RepeatButton}">
                            <Setter Property="SnapsToDevicePixels" Value="True" />
                            <Setter Property="OverridesDefaultStyle" Value="True" />
                            <Setter Property="Focusable" Value="False" />
                            <Setter Property="IsTabStop" Value="False" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                                        <Border Background="{DynamicResource ScrollBar-Background}"
                                                CornerRadius="0 0 2 2" />
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Track.Resources>

                    <Track.DecreaseRepeatButton>
                        <RepeatButton Style="{StaticResource ScrollBarTrackUp}" Command="ScrollBar.PageUpCommand" />
                    </Track.DecreaseRepeatButton>

                    <Track.Thumb>
                        <Thumb Style="{StaticResource ScrollBarThumb}" />
                    </Track.Thumb>

                    <Track.IncreaseRepeatButton>
                        <RepeatButton Style="{StaticResource ScrollBarTrackDown}"
                                      Command="ScrollBar.PageDownCommand" />
                    </Track.IncreaseRepeatButton>
                </Track>
            </Grid>
        </ControlTemplate>

        <!-- ChatBox Resources -->
        <Style TargetType="{x:Type ListViewItem}" x:Key="ChatBox">
            <Setter Property="Margin" Value="0" />
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
            <Setter Property="MinWidth" Value="200" />
            <Setter Property="MaxWidth" Value="350" />

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListBoxItem">
                        <Border x:Name="border"
                                CornerRadius="5"
                                Background="{DynamicResource ChatBox-Normal}"
                                MinWidth="200"
                                MaxWidth="350"
                                Focusable="False"
                                Margin="0 0 0 10"
                                Height="78">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="64" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <Grid Column="0">
                                    <!-- Full circled Image 48x48 -->
                                    <Ellipse Width="48" Height="48">
                                        <Ellipse.Fill>
                                            <ImageBrush
                                                ImageSource="{Binding User.PhotoUrl}" />
                                        </Ellipse.Fill>
                                    </Ellipse>
                                </Grid>
                                <Grid Column="1">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="*" />
                                        <RowDefinition Height="*" />
                                    </Grid.RowDefinitions>
                                    <Grid Grid.Row="0">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition MaxWidth="220" Width="*" />
                                            <ColumnDefinition MaxWidth="6" Width="*" />
                                            <ColumnDefinition Width="60" />
                                        </Grid.ColumnDefinitions>
                                        <Grid Grid.Column="0" HorizontalAlignment="Left">
                                            <TextBlock Text="{Binding Label}"
                                                       FontSize="14" FontFamily="{StaticResource Alata}"
                                                       FontWeight="Regular"
                                                       Foreground="{DynamicResource Strongest-Stroke}"
                                                       MaxHeight="19"
                                                       MaxWidth="274"
                                                       TextTrimming="CharacterEllipsis"
                                                       HorizontalAlignment="Left"
                                                       Margin="2,11,0,0" />
                                        </Grid>
                                        <Grid Grid.Column="2" HorizontalAlignment="Right">
                                            <StackPanel Orientation="Horizontal">
                                                <Grid Margin="0 0 6 0">
                                                    <Border x:Name="MessagesCountBorder" CornerRadius="7"
                                                            MaxHeight="14"
                                                            MaxWidth="36"
                                                            Background="{DynamicResource MessagesCount-Border}"
                                                            Visibility="Collapsed">
                                                        <TextBlock Text="{Binding UnreadMessages, Converter={StaticResource IntToString}}"
                                                                   FontSize="10"
                                                                   FontFamily="{StaticResource Alata}"
                                                                   FontWeight="Regular"
                                                                   Foreground="{DynamicResource MessagesCount-Foreground}"
                                                                   Margin="4,0,4,2" />
                                                    </Border>
                                                </Grid>
                                                <Grid Height="14" Width="14" Margin="0 0 6 0"
                                                      Visibility="{Binding IsPinned, Converter={StaticResource AnchorVisibilityConverter}}">
                                                    <Path
                                                        x:Name="AnchorPin"
                                                        Data="M7 4.66663C7.9665 4.66663 8.75 3.88312 8.75 2.91663C8.75 1.95013 7.9665 1.16663 7 1.16663C6.0335 1.16663 5.25 1.95013 5.25 2.91663C5.25 3.88312 6.0335 4.66663 7 4.66663Z M7 12.8333V4.66663 M2.91669 7H1.16669C1.16669 8.5471 1.78127 10.0308 2.87523 11.1248C3.96919 12.2188 5.45292 12.8333 7.00002 12.8333C8.54712 12.8333 10.0308 12.2188 11.1248 11.1248C12.2188 10.0308 12.8334 8.5471 12.8334 7H11.0834"
                                                        Stroke="{DynamicResource Anchor}" StrokeThickness="2"
                                                        StrokeLineJoin="Round"
                                                        StrokeEndLineCap="Round" StrokeStartLineCap="Round" />
                                                </Grid>
                                            </StackPanel>
                                        </Grid>
                                    </Grid>
                                    <Grid Grid.Row="1">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition MaxWidth="220" Width="*" />
                                                <ColumnDefinition MaxWidth="28" Width="*" />
                                                <ColumnDefinition Width="36" />
                                            </Grid.ColumnDefinitions>
                                            <Grid Grid.Column="0">
                                                <TextBlock x:Name="MessageText"
                                                           Text="{Binding LastMessage.Text}"
                                                           FontFamily="{StaticResource Alata}"
                                                           Foreground="{DynamicResource ChatBox-Foreground}"
                                                           FontWeight="Regular"
                                                           TextWrapping="Wrap"
                                                           TextTrimming="WordEllipsis"
                                                           FontSize="12"
                                                           MaxHeight="34"
                                                           MaxWidth="220"
                                                           HorizontalAlignment="Left"
                                                           VerticalAlignment="Top"
                                                           Margin="2,0,0,0" />
                                            </Grid>
                                            <Grid Grid.Column="2" HorizontalAlignment="Right">
                                                <TextBlock Text="{Binding LastMessage.SentAt, Converter={StaticResource DateTimeConverter}}"
                                                           FontSize="10"
                                                           FontFamily="{StaticResource Alata}"
                                                           FontWeight="Regular"
                                                           Foreground="{DynamicResource Litest-Stroke-Second}"
                                                           Margin="0 19 10 0" />
                                            </Grid>
                                        </Grid>
                                    </Grid>
                                </Grid>
                            </Grid>
                            <Border.ContextMenu>
                                <ContextMenu Resources="{StaticResource Icons}">
                                    <MenuItem Header="{x:Static language:lang.pin}">
                                        <MenuItem.Icon>
                                            <Image Source="{StaticResource AnchorIcon}" Width="16" Height="16" />
                                        </MenuItem.Icon>
                                    </MenuItem>
                                    <MenuItem Header="{x:Static language:lang.notifications_off}">
                                        <MenuItem.Icon>
                                            <Image Source="{StaticResource Bell}" Width="16" Height="16" />
                                        </MenuItem.Icon>
                                    </MenuItem>
                                    <MenuItem Header="{x:Static language:lang.block_user}">
                                        <MenuItem.Icon>
                                            <Image Source="{StaticResource Block}" Width="16" Height="16" />
                                        </MenuItem.Icon>
                                    </MenuItem>
                                    <MenuItem Header="{x:Static language:lang.delete_chat}">
                                        <MenuItem.Icon>
                                            <Image Source="{StaticResource Trash}" Width="16" Height="16" />
                                        </MenuItem.Icon>
                                    </MenuItem>
                                </ContextMenu>
                            </Border.ContextMenu>
                        </Border>
                        <ControlTemplate.Triggers>
                            <DataTrigger
                                Binding="{Binding MessagesCount, Converter={StaticResource MessagesCountConverter}}">
                                <DataTrigger.Value>True</DataTrigger.Value>
                                <Setter TargetName="MessagesCountBorder" Property="Visibility" Value="Visible" />
                            </DataTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Selector.IsSelectionActive" Value="False" />
                                    <Condition Property="Selector.IsSelected" Value="True" />
                                </MultiTrigger.Conditions>
                                <MultiTrigger.Setters>
                                    <Setter Property="Background" TargetName="border"
                                            Value="{DynamicResource ChatBox-Selected}" />
                                    <Setter Property="Stroke" TargetName="AnchorPin" Value="{DynamicResource Anchor-Selected}" />
                                    <Setter Property="Background" TargetName="MessagesCountBorder" Value="{DynamicResource MessagesCount-Border-Selected}" />
                                    <Setter Property="Foreground" TargetName="MessageText" Value="{DynamicResource Strongest-Stroke}" />
                                </MultiTrigger.Setters>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Selector.IsSelectionActive" Value="True" />
                                    <Condition Property="Selector.IsSelected" Value="True" />
                                </MultiTrigger.Conditions>
                                <MultiTrigger.Setters>
                                    <Setter Property="Background" TargetName="border"
                                            Value="{DynamicResource ChatBox-Selected}" />
                                    <Setter Property="Stroke" TargetName="AnchorPin" Value="{DynamicResource Anchor-Selected}" />
                                    <Setter Property="Background" TargetName="MessagesCountBorder" Value="{DynamicResource MessagesCount-Border-Selected}" />
                                    <Setter Property="Foreground" TargetName="MessageText" Value="{DynamicResource Strongest-Stroke}" />
                                </MultiTrigger.Setters>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="UIElement.IsMouseOver" Value="True" />
                                    <Condition Property="Selector.IsSelected" Value="False" />
                                </MultiTrigger.Conditions>
                                <MultiTrigger.Setters>
                                    <Setter Property="Background" TargetName="border"
                                            Value="{DynamicResource ChatBox-MouseOver}" />
                                </MultiTrigger.Setters>
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- ContextMenu Resources -->
        <Style TargetType="ContextMenu">
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ContextMenu">
                        <Border CornerRadius="5" 
                                BorderBrush="{DynamicResource Background-Element}" 
                                BorderThickness="1"
                                Background="{DynamicResource Main}"
                                SnapsToDevicePixels="True">
                            <ItemsPresenter />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="MenuItem">
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <Setter Property="FontSize" Value="14" />
            <Setter Property="Foreground" Value="{DynamicResource Normal-Stroke}" />
            <Setter Property="FontFamily" Value="{StaticResource Alata}" />
            <Setter Property="FontWeight" Value="Regular" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="MenuItem">
                        <Border x:Name="Bd" Padding="0,0,0,0" SnapsToDevicePixels="True">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <Border x:Name="IconBorder" Grid.Column="0"
                                        Background="Transparent" Margin="14,0,10,0" SnapsToDevicePixels="True">
                                    <ContentPresenter x:Name="Icon" ContentSource="Icon" />
                                </Border>
                                <ContentPresenter x:Name="Header" Grid.Column="1" Margin="0,10,14,10"
                                                  ContentSource="Header"
                                                  SnapsToDevicePixels="True" />
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsHighlighted" Value="True">
                                <Setter Property="Background" TargetName="Bd" Value="{DynamicResource Background-Element}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Application.Resources>
</Application>