<Application x:Class="FlyMessenger.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:converters="clr-namespace:FlyMessenger.Converters"
             xmlns:language="clr-namespace:FlyMessenger.Resources.Languages"
             xmlns:userControls="clr-namespace:FlyMessenger.UserControls"
             xmlns:viewModels="clr-namespace:FlyMessenger.MVVM.ViewModels"
             StartupUri="LoginWindow.xaml">
    <Application.Resources>

        <ObjectDataProvider x:Key="UserFirstNameDataProvider" ObjectType="{x:Type viewModels:MainViewModel}" />
        <ObjectDataProvider x:Key="UserLastNameDataProvider" ObjectType="{x:Type viewModels:MainViewModel}" />
        <ObjectDataProvider x:Key="UserEmailDataProvider" ObjectType="{x:Type viewModels:MainViewModel}" />
        <ObjectDataProvider x:Key="DataProviderToMainViewModel" ObjectType="{x:Type viewModels:MainViewModel}" />

        <!-- Resources -->
        <converters:MessagesCountConverter x:Key="MessagesCountConverter" />
        <converters:AnchorVisibilityConverter x:Key="AnchorVisibilityConverter" />
        <converters:DateTimeConverter x:Key="DateTimeConverter" />
        <converters:IntToStringConverter x:Key="IntToString" />
        <converters:ChatBoxNameConverter x:Key="ChatBoxNameConverter" />
        <converters:ImageToSourceConverter x:Key="ImageToSourceConverter" />
        <converters:FistLetterToUpperConverter x:Key="FistLetterToUpperConverter" />
        <converters:DateToDateConverter x:Key="DateToDateConverter" />
        <converters:PinConverter x:Key="PinConverter" />
        <converters:NotificationsConverter x:Key="NotificationsConverter" />
        <converters:NotificationsIconConverter x:Key="NotificationsIconConverter" />
        <converters:SoundConverter x:Key="SoundConverter" />
        <converters:SoundIconConverter x:Key="SoundIconConverter" />
        <converters:BlockConverter x:Key="BlockConverter" />
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />

        <ResourceDictionary x:Key="Icons">
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="Resources/Icons/XamlIcons.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>

        <FontFamily x:Key="Alata">
            pack://application:,,,/FlyMessenger;,,,/Resources/Fonts/Alata-Regular.ttf#Alata
        </FontFamily>

        <!-- Sidebar Buttons Resources -->
        <Style x:Key="UcButton" TargetType="Button">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Name="Border" BorderThickness="0" Background="{TemplateBinding Background}">
                            <ContentPresenter VerticalAlignment="Center" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{DynamicResource Background-Element}" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- topBar Buttons Resources -->
        <Style x:Key="TopButtonBar" TargetType="Button">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Name="Border" BorderThickness="0" Background="{TemplateBinding Background}">
                            <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Modal Close Button Resources -->
        <Style x:Key="ModalCloseButton" TargetType="Button">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="Width" Value="30" />
            <Setter Property="Height" Value="30" />
            <Setter Property="Margin" Value="0 0 10 0" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="HorizontalAlignment" Value="Right" />
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Name="Border" BorderThickness="0" CornerRadius="15"
                                Background="{TemplateBinding Background}">
                            <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{DynamicResource ModalCloseButton-MouseOver}" />
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="{DynamicResource ModalCloseButton-Selected}" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- Modal Close Button Resources -->
        <Style x:Key="NotificationCloseButton" TargetType="Button">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="Width" Value="24" />
            <Setter Property="Height" Value="24" />
            <Setter Property="HorizontalAlignment" Value="Left" />
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Name="Border" BorderThickness="0" CornerRadius="15"
                                Background="{TemplateBinding Background}">
                            <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{DynamicResource ModalCloseButton-MouseOver}" />
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="{DynamicResource ModalCloseButton-Selected}" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- Session Close Button Resources -->
        <Style x:Key="SessionCloseButton" TargetType="Button">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="Width" Value="24" />
            <Setter Property="Height" Value="24" />
            <Setter Property="Margin" Value="0 0 10 0" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="HorizontalAlignment" Value="Right" />
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Name="Border" BorderThickness="0" CornerRadius="15"
                                Background="{TemplateBinding Background}">
                            <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{DynamicResource SessionCloseButton-MouseOver}" />
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="{DynamicResource SessionCloseButton-Selected}" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- UnblockUser Button Resources -->
        <Style x:Key="UnblockUserButton" TargetType="Button">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Foreground" Value="{DynamicResource Unblock}" />
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="Margin" Value="0 0 10 0" />
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Name="Border" Padding="4" BorderThickness="0" CornerRadius="5"
                                Background="{TemplateBinding Background}">
                            <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{DynamicResource SessionCloseButton-MouseOver}" />
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="{DynamicResource SessionCloseButton-Selected}" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- Modal Back Button Resources -->
        <Style x:Key="ModalBackButton" TargetType="Button">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="Width" Value="30" />
            <Setter Property="Height" Value="30" />
            <Setter Property="Margin" Value="10 0 0 0" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="HorizontalAlignment" Value="Left" />
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Name="Border" BorderThickness="0" CornerRadius="15"
                                Background="{TemplateBinding Background}">
                            <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{DynamicResource ModalBackButton-MouseOver}" />
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="{DynamicResource ModalBackButton-Selected}" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- Underline Text Resources -->
        <Style x:Key="UnderlineTextOnHover" TargetType="TextBlock">
            <Setter Property="TextDecorations" Value="None" />
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="TextDecorations">
                        <Setter.Value>
                            <TextDecorationCollection>
                                <TextDecoration Location="Underline" PenOffset="1" />
                            </TextDecorationCollection>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- ScrollBar Resources -->
        <Style TargetType="ScrollBar">
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="OverridesDefaultStyle" Value="True" />

            <Style.Triggers>
                <Trigger Property="Orientation" Value="Vertical">
                    <Setter Property="Width" Value="4" />
                    <Setter Property="Margin" Value="0 10 8 10" />
                    <Setter Property="Template" Value="{DynamicResource VerticalScrollBar}" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="UnreadMessagesBorderStyle" TargetType="Border">
            <Setter Property="Width" Value="40" />
            <Setter Property="Height" Value="40" />
            <Setter Property="Background" Value="{DynamicResource MessagesCount-Border}" />
            <Setter Property="CornerRadius" Value="20" />
            <Setter Property="Visibility" Value="Visible" />

            <Style.Triggers>
                <DataTrigger Binding="{Binding UnreadMessagesCount}" Value="0">
                    <Setter Property="Visibility" Value="Collapsed" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <ControlTemplate x:Key="VerticalScrollBar" TargetType="{x:Type ScrollBar}">
            <Grid>
                <Track Name="PART_Track" IsDirectionReversed="True">
                    <Track.Resources>
                        <Style x:Key="ScrollBarThumb" TargetType="Thumb">
                            <Setter Property="SnapsToDevicePixels" Value="True" />
                            <Setter Property="OverridesDefaultStyle" Value="True" />
                            <Setter Property="MinHeight" Value="16" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type Thumb}">
                                        <Border x:Name="border" CornerRadius="2"
                                                Background="{DynamicResource ScrollBar-Stroke}"
                                                Opacity="0.75"
                                                SnapsToDevicePixels="True" />

                                        <ControlTemplate.Triggers>
                                            <EventTrigger RoutedEvent="MouseEnter">
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <DoubleAnimation Storyboard.TargetName="border"
                                                                         Storyboard.TargetProperty="Opacity"
                                                                         To="1" Duration="0:0:0.1" />
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </EventTrigger>
                                            <EventTrigger RoutedEvent="MouseLeave">
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <DoubleAnimation Storyboard.TargetName="border"
                                                                         Storyboard.TargetProperty="Opacity"
                                                                         To="0.75" Duration="0:0:0.1" />
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </EventTrigger>
                                        </ControlTemplate.Triggers>

                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>

                        <Style x:Key="ScrollBarTrackUp" TargetType="{x:Type RepeatButton}">
                            <Setter Property="SnapsToDevicePixels" Value="True" />
                            <Setter Property="OverridesDefaultStyle" Value="True" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                                        <Border Background="{DynamicResource ScrollBar-Background}"
                                                CornerRadius="2 2 0 0" />
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>

                        <Style x:Key="ScrollBarTrackDown" TargetType="{x:Type RepeatButton}">
                            <Setter Property="SnapsToDevicePixels" Value="True" />
                            <Setter Property="OverridesDefaultStyle" Value="True" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                                        <Border Background="{DynamicResource ScrollBar-Background}"
                                                CornerRadius="0 0 2 2" />
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Track.Resources>

                    <Track.DecreaseRepeatButton>
                        <RepeatButton Style="{StaticResource ScrollBarTrackUp}" Command="ScrollBar.PageUpCommand" />
                    </Track.DecreaseRepeatButton>

                    <Track.Thumb>
                        <Thumb Style="{StaticResource ScrollBarThumb}" />
                    </Track.Thumb>

                    <Track.IncreaseRepeatButton>
                        <RepeatButton Style="{StaticResource ScrollBarTrackDown}"
                                      Command="ScrollBar.PageDownCommand" />
                    </Track.IncreaseRepeatButton>
                </Track>
            </Grid>
        </ControlTemplate>

        <!-- ChatBox Resources -->
        <Style TargetType="{x:Type ListViewItem}" x:Key="ChatBox">
            <Setter Property="Margin" Value="0" />
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <Setter Property="MinWidth" Value="200" />
            <Setter Property="MaxWidth" Value="350" />

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListBoxItem">
                        <Border x:Name="border"
                                CornerRadius="5"
                                Background="{DynamicResource ChatBox-Normal}"
                                MinWidth="200"
                                MaxWidth="350"
                                Margin="0 0 0 10"
                                Height="78">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="64" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <Grid Column="0" Width="54" Height="54">
                                    <!-- Full circled Image 48x48 -->
                                    <Ellipse Width="48" Height="48">
                                        <Ellipse.Fill>
                                            <ImageBrush Stretch="UniformToFill"
                                                        RenderOptions.BitmapScalingMode="Fant"
                                                        ImageSource="{Binding User.PhotoUrl}" />
                                        </Ellipse.Fill>
                                    </Ellipse>
                                    <Border x:Name="OnlineBorder"
                                            Width="12"
                                            Height="12"
                                            BorderBrush="{DynamicResource ChatBox-Normal}"
                                            BorderThickness="2"
                                            CornerRadius="6"
                                            Background="{DynamicResource Settings-Change-Photo}"
                                            VerticalAlignment="Bottom"
                                            HorizontalAlignment="Right"
                                            Margin="0 0 3 3"
                                            Visibility="{Binding User.IsOnline, 
                                                Converter={StaticResource BooleanToVisibilityConverter}}" />
                                </Grid>
                                <Grid Column="1">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="*" />
                                        <RowDefinition Height="*" />
                                    </Grid.RowDefinitions>
                                    <Grid Grid.Row="0">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition MaxWidth="220" Width="*" />
                                            <ColumnDefinition MaxWidth="6" Width="*" />
                                            <ColumnDefinition Width="60" />
                                        </Grid.ColumnDefinitions>
                                        <Grid Grid.Column="0" HorizontalAlignment="Left">
                                            <TextBlock FontSize="14" FontFamily="{StaticResource Alata}"
                                                       FontWeight="Regular"
                                                       Foreground="{DynamicResource Strongest-Stroke}"
                                                       MaxHeight="19"
                                                       MaxWidth="274"
                                                       TextTrimming="CharacterEllipsis"
                                                       HorizontalAlignment="Left"
                                                       Margin="2,11,0,0">
                                                <TextBlock.Text>
                                                    <MultiBinding Converter="{StaticResource ChatBoxNameConverter}">
                                                        <Binding Path="User.FirstName" />
                                                        <Binding Path="User.LastName" />
                                                    </MultiBinding>
                                                </TextBlock.Text>
                                            </TextBlock>
                                        </Grid>
                                        <Grid Grid.Column="2" HorizontalAlignment="Right">
                                            <StackPanel Orientation="Horizontal">
                                                <Grid Margin="0 0 6 0">
                                                    <Border x:Name="MessagesCountBorder" CornerRadius="8"
                                                            MaxHeight="18"
                                                            MaxWidth="38"
                                                            Background="{DynamicResource MessagesCount-Border}"
                                                            Visibility="Collapsed">
                                                        <TextBlock
                                                            Text="{Binding UnreadMessages, Converter={StaticResource IntToString}}"
                                                            FontSize="10"
                                                            FontFamily="{StaticResource Alata}"
                                                            FontWeight="Regular"
                                                            Foreground="{DynamicResource MessagesCount-Foreground}"
                                                            TextTrimming="CharacterEllipsis"
                                                            Padding="6,2" />
                                                    </Border>
                                                </Grid>
                                                <Grid Height="14" Width="14" Margin="0 0 6 0"
                                                      Visibility="{Binding IsPinned, Converter={StaticResource AnchorVisibilityConverter}}">
                                                    <Path
                                                        x:Name="AnchorPin"
                                                        Data="M7 4.66663C7.9665 4.66663 8.75 3.88312 8.75 2.91663C8.75 1.95013 7.9665 1.16663 7 1.16663C6.0335 1.16663 5.25 1.95013 5.25 2.91663C5.25 3.88312 6.0335 4.66663 7 4.66663Z M7 12.8333V4.66663 M2.91669 7H1.16669C1.16669 8.5471 1.78127 10.0308 2.87523 11.1248C3.96919 12.2188 5.45292 12.8333 7.00002 12.8333C8.54712 12.8333 10.0308 12.2188 11.1248 11.1248C12.2188 10.0308 12.8334 8.5471 12.8334 7H11.0834"
                                                        Stroke="{DynamicResource Anchor}" StrokeThickness="2"
                                                        StrokeLineJoin="Round"
                                                        StrokeEndLineCap="Round" StrokeStartLineCap="Round" />
                                                </Grid>
                                            </StackPanel>
                                        </Grid>
                                    </Grid>
                                    <Grid Grid.Row="1">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition MaxWidth="220" Width="*" />
                                                <ColumnDefinition MaxWidth="28" Width="*" />
                                                <ColumnDefinition Width="Auto" />
                                            </Grid.ColumnDefinitions>
                                            <Grid Grid.Column="0">
                                                <TextBlock x:Name="MessageText"
                                                           Text="{Binding LastMessage.Text, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                           FontFamily="{StaticResource Alata}"
                                                           Foreground="{DynamicResource ChatBox-Foreground}"
                                                           FontWeight="Regular"
                                                           TextWrapping="Wrap"
                                                           TextTrimming="WordEllipsis"
                                                           FontSize="12"
                                                           MaxHeight="34"
                                                           MaxWidth="220"
                                                           HorizontalAlignment="Left"
                                                           VerticalAlignment="Top"
                                                           Margin="2,0,0,0" />
                                            </Grid>
                                            <Grid Grid.Column="2" HorizontalAlignment="Right">
                                                <TextBlock
                                                    Text="{Binding LastMessage.SentAt, Mode=TwoWay,
                                                    UpdateSourceTrigger=PropertyChanged, Converter={StaticResource DateTimeConverter}}"
                                                    FontSize="10"
                                                    FontFamily="{StaticResource Alata}"
                                                    FontWeight="Regular"
                                                    Foreground="{DynamicResource Litest-Stroke-Second}"
                                                    Margin="0 19 10 0" />
                                            </Grid>
                                        </Grid>
                                    </Grid>
                                </Grid>
                            </Grid>
                            <Border.ContextMenu>
                                <ContextMenu>
                                    <MenuItem Header="{Binding IsPinned, Converter={StaticResource PinConverter}}"
                                              PreviewMouseLeftButtonUp="DialogPinState">
                                        <MenuItem.Icon>
                                            <Image x:Name="Image" Source="{DynamicResource AnchorIcon}" Width="16"
                                                   Height="16" />
                                        </MenuItem.Icon>
                                    </MenuItem>
                                    <MenuItem x:Name="NotificationsMenuItem"
                                              Header="{Binding IsNotificationsEnabled, 
                                              Converter={StaticResource NotificationsConverter}}"
                                              PreviewMouseLeftButtonUp="DialogNotificationsState">
                                        <MenuItem.Icon>
                                            <Image
                                                Source="{Binding IsNotificationsEnabled, 
                                                Converter={StaticResource NotificationsIconConverter}}"
                                                Width="16" Height="16" />
                                        </MenuItem.Icon>
                                    </MenuItem>
                                    <MenuItem x:Name="SoundMenuItem"
                                              Header="{Binding IsSoundEnabled, 
                                              Converter={StaticResource SoundConverter}}"
                                              PreviewMouseLeftButtonUp="DialogSoundState">
                                        <MenuItem.Icon>
                                            <Image
                                                Source="{Binding IsSoundEnabled, 
                                                Converter={StaticResource SoundIconConverter}}"
                                                Width="16" Height="16" />
                                        </MenuItem.Icon>
                                    </MenuItem>
                                    <MenuItem x:Name="BlockMenuItem"
                                              Header="{Binding User.IsBlocked, 
                                              Converter={StaticResource BlockConverter}}"
                                              PreviewMouseLeftButtonUp="DialogBlockState">
                                        <MenuItem.Icon>
                                            <Image Source="{DynamicResource Block}" Width="16" Height="16" />
                                        </MenuItem.Icon>
                                    </MenuItem>
                                    <MenuItem x:Name="DeleteMenuItem"
                                              Header="{x:Static language:lang.delete_chat}"
                                              PreviewMouseLeftButtonUp="DialogDelete">
                                        <MenuItem.Icon>
                                            <Image Source="{DynamicResource Trash}" Width="16" Height="16" />
                                        </MenuItem.Icon>
                                    </MenuItem>
                                </ContextMenu>
                            </Border.ContextMenu>
                        </Border>
                        <ControlTemplate.Triggers>
                            <DataTrigger
                                Binding="{Binding UnreadMessages, 
                                Converter={StaticResource MessagesCountConverter}, 
                                UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}">
                                <DataTrigger.Value>True</DataTrigger.Value>
                                <Setter TargetName="MessagesCountBorder" Property="Visibility" Value="Visible" />
                            </DataTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Selector.IsSelectionActive" Value="False" />
                                    <Condition Property="Selector.IsSelected" Value="True" />
                                </MultiTrigger.Conditions>
                                <MultiTrigger.Setters>
                                    <Setter Property="Background" TargetName="border"
                                            Value="{DynamicResource ChatBox-Selected}" />
                                    <Setter Property="Stroke" TargetName="AnchorPin"
                                            Value="{DynamicResource Anchor-Selected}" />
                                    <Setter Property="Background" TargetName="MessagesCountBorder"
                                            Value="{DynamicResource MessagesCount-Border-Selected}" />
                                    <Setter Property="Foreground" TargetName="MessageText"
                                            Value="{DynamicResource Strongest-Stroke}" />
                                    <Setter Property="BorderBrush" TargetName="OnlineBorder"
                                            Value="{DynamicResource ChatBox-Selected}" />
                                </MultiTrigger.Setters>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Selector.IsSelectionActive" Value="True" />
                                    <Condition Property="Selector.IsSelected" Value="True" />
                                </MultiTrigger.Conditions>
                                <MultiTrigger.Setters>
                                    <Setter Property="Background" TargetName="border"
                                            Value="{DynamicResource ChatBox-Selected}" />
                                    <Setter Property="Stroke" TargetName="AnchorPin"
                                            Value="{DynamicResource Anchor-Selected}" />
                                    <Setter Property="Background" TargetName="MessagesCountBorder"
                                            Value="{DynamicResource MessagesCount-Border-Selected}" />
                                    <Setter Property="Foreground" TargetName="MessageText"
                                            Value="{DynamicResource Strongest-Stroke}" />
                                    <Setter Property="BorderBrush" TargetName="OnlineBorder"
                                            Value="{DynamicResource ChatBox-Selected}" />
                                </MultiTrigger.Setters>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="UIElement.IsMouseOver" Value="True" />
                                    <Condition Property="Selector.IsSelected" Value="False" />
                                </MultiTrigger.Conditions>
                                <MultiTrigger.Setters>
                                    <Setter Property="Background" TargetName="border"
                                            Value="{DynamicResource ChatBox-MouseOver}" />
                                    <Setter Property="BorderBrush" TargetName="OnlineBorder"
                                            Value="{DynamicResource ChatBox-MouseOver}" />
                                </MultiTrigger.Setters>
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- UserBox Resources -->
        <Style TargetType="{x:Type ListViewItem}" x:Key="UserBox">
            <Setter Property="Margin" Value="0" />
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <Setter Property="MinWidth" Value="200" />
            <Setter Property="MaxWidth" Value="350" />

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListBoxItem">
                        <Border x:Name="border"
                                CornerRadius="5"
                                Background="{DynamicResource ChatBox-Normal}"
                                MinWidth="200"
                                MaxWidth="350"
                                Margin="0 0 0 10"
                                Height="78">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="64" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <Grid Column="0">
                                    <!-- Full circled Image 48x48 -->
                                    <Ellipse Width="48" Height="48">
                                        <Ellipse.Fill>
                                            <ImageBrush Stretch="UniformToFill"
                                                        RenderOptions.BitmapScalingMode="Fant"
                                                        ImageSource="{Binding PhotoUrl}" />
                                        </Ellipse.Fill>
                                    </Ellipse>
                                    <Border x:Name="OnlineBorder"
                                            Width="12"
                                            Height="12"
                                            BorderBrush="{DynamicResource ChatBox-Normal}"
                                            BorderThickness="2"
                                            CornerRadius="6"
                                            Background="{DynamicResource Settings-Change-Photo}"
                                            VerticalAlignment="Bottom"
                                            HorizontalAlignment="Right"
                                            Margin="0 0 3 3"
                                            Visibility="{Binding IsOnline, 
                                                Converter={StaticResource BooleanToVisibilityConverter}}" />
                                </Grid>
                                <Grid Column="1">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="*" />
                                        <RowDefinition Height="*" />
                                    </Grid.RowDefinitions>
                                    <Grid Grid.Row="0" HorizontalAlignment="Left">
                                        <TextBlock FontSize="14" FontFamily="{StaticResource Alata}"
                                                   FontWeight="Regular"
                                                   Foreground="{DynamicResource Strongest-Stroke}"
                                                   MaxHeight="19"
                                                   MaxWidth="274"
                                                   TextTrimming="CharacterEllipsis"
                                                   HorizontalAlignment="Left"
                                                   Margin="2,11,0,0">
                                            <TextBlock.Text>
                                                <MultiBinding Converter="{StaticResource ChatBoxNameConverter}">
                                                    <Binding Path="FirstName" />
                                                    <Binding Path="LastName" />
                                                </MultiBinding>
                                            </TextBlock.Text>
                                        </TextBlock>
                                    </Grid>
                                    <Grid Grid.Row="1">
                                        <TextBlock x:Name="UsernameTextBlock"
                                                   Text="{Binding Username, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, 
                                                    StringFormat=@{0}}"
                                                   FontFamily="{StaticResource Alata}"
                                                   Foreground="{DynamicResource ChatBox-Foreground}"
                                                   FontWeight="Regular"
                                                   TextWrapping="Wrap"
                                                   TextTrimming="WordEllipsis"
                                                   FontSize="12"
                                                   MaxHeight="34"
                                                   MaxWidth="220"
                                                   HorizontalAlignment="Left"
                                                   VerticalAlignment="Top"
                                                   Margin="2,0,0,0" />
                                    </Grid>
                                </Grid>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Selector.IsSelectionActive" Value="False" />
                                    <Condition Property="Selector.IsSelected" Value="True" />
                                </MultiTrigger.Conditions>
                                <MultiTrigger.Setters>
                                    <Setter Property="Background" TargetName="border"
                                            Value="{DynamicResource ChatBox-Selected}" />
                                    <Setter Property="Foreground" TargetName="UsernameTextBlock"
                                            Value="{DynamicResource Strongest-Stroke}" />
                                </MultiTrigger.Setters>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Selector.IsSelectionActive" Value="True" />
                                    <Condition Property="Selector.IsSelected" Value="True" />
                                </MultiTrigger.Conditions>
                                <MultiTrigger.Setters>
                                    <Setter Property="Background" TargetName="border"
                                            Value="{DynamicResource ChatBox-Selected}" />
                                    <Setter Property="Foreground" TargetName="UsernameTextBlock"
                                            Value="{DynamicResource Strongest-Stroke}" />
                                </MultiTrigger.Setters>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="UIElement.IsMouseOver" Value="True" />
                                    <Condition Property="Selector.IsSelected" Value="False" />
                                </MultiTrigger.Conditions>
                                <MultiTrigger.Setters>
                                    <Setter Property="Background" TargetName="border"
                                            Value="{DynamicResource ChatBox-MouseOver}" />
                                </MultiTrigger.Setters>
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- UserBox Resources -->
        <Style TargetType="{x:Type ListViewItem}" x:Key="CurrentUserBox">
            <Setter Property="Margin" Value="0" />
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <Setter Property="MinWidth" Value="200" />
            <Setter Property="MaxWidth" Value="350" />

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListBoxItem">
                        <Border x:Name="border"
                                CornerRadius="5"
                                Background="{DynamicResource ChatBox-Normal}"
                                MinWidth="200"
                                MaxWidth="350"
                                Margin="0 0 0 10"
                                Height="78">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="64" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <Grid Column="0">
                                    <!-- Full circled Image 48x48 -->
                                    <Ellipse Width="48" Height="48">
                                        <Ellipse.Fill>
                                            <ImageBrush Stretch="UniformToFill"
                                                        RenderOptions.BitmapScalingMode="Fant"
                                                        ImageSource="{Binding PhotoUrl}" />
                                        </Ellipse.Fill>
                                    </Ellipse>
                                    <Border x:Name="OnlineBorder"
                                            Width="12"
                                            Height="12"
                                            BorderBrush="{DynamicResource ChatBox-Normal}"
                                            BorderThickness="2"
                                            CornerRadius="6"
                                            Background="{DynamicResource Settings-Change-Photo}"
                                            VerticalAlignment="Bottom"
                                            HorizontalAlignment="Right"
                                            Margin="0 0 3 3"
                                            Visibility="{Binding IsOnline, 
                                                Converter={StaticResource BooleanToVisibilityConverter}}" />
                                </Grid>
                                <Grid Column="1" HorizontalAlignment="Left">
                                    <TextBlock FontSize="14" FontFamily="{StaticResource Alata}"
                                               FontWeight="Regular"
                                               Foreground="{DynamicResource Strongest-Stroke}"
                                               MaxHeight="19"
                                               MaxWidth="274"
                                               TextTrimming="CharacterEllipsis"
                                               HorizontalAlignment="Left"
                                               Margin="2,11,0,0">
                                        <TextBlock.Text>
                                            <MultiBinding Converter="{StaticResource ChatBoxNameConverter}">
                                                <Binding Path="FirstName" />
                                                <Binding Path="LastName" />
                                            </MultiBinding>
                                        </TextBlock.Text>
                                    </TextBlock>
                                    <Button x:Name="CloseButton"
                                            Width="20"
                                            Height="20"
                                            HorizontalAlignment="Right"
                                            VerticalAlignment="Top"
                                            Margin="0,0,0,0"
                                            Background="Transparent"
                                            BorderBrush="Transparent"
                                            BorderThickness="0"
                                            Command="{Binding CloseCommand}"
                                            CommandParameter="{Binding}">
                                        <Button.Template>
                                            <ControlTemplate TargetType="Button">
                                                <Border x:Name="border"
                                                        CornerRadius="10"
                                                        Background="Transparent"
                                                        BorderBrush="Transparent"
                                                        BorderThickness="0">
                                                    <Path Fill="{DynamicResource ChatBox-Foreground}"
                                                          Data="M 10,10 L 20,20 M 20,10 L 10,20" />
                                                </Border>
                                            </ControlTemplate>
                                        </Button.Template>
                                    </Button>
                                </Grid>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Selector.IsSelectionActive" Value="False" />
                                    <Condition Property="Selector.IsSelected" Value="True" />
                                </MultiTrigger.Conditions>
                                <MultiTrigger.Setters>
                                    <Setter Property="Background" TargetName="border"
                                            Value="{DynamicResource ChatBox-Selected}" />
                                    <Setter Property="BorderBrush" TargetName="OnlineBorder"
                                            Value="{DynamicResource ChatBox-Selected}" />
                                </MultiTrigger.Setters>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Selector.IsSelectionActive" Value="True" />
                                    <Condition Property="Selector.IsSelected" Value="True" />
                                </MultiTrigger.Conditions>
                                <MultiTrigger.Setters>
                                    <Setter Property="Background" TargetName="border"
                                            Value="{DynamicResource ChatBox-Selected}" />
                                    <Setter Property="BorderBrush" TargetName="OnlineBorder"
                                            Value="{DynamicResource ChatBox-Selected}" />
                                </MultiTrigger.Setters>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="UIElement.IsMouseOver" Value="True" />
                                    <Condition Property="Selector.IsSelected" Value="False" />
                                </MultiTrigger.Conditions>
                                <MultiTrigger.Setters>
                                    <Setter Property="Background" TargetName="border"
                                            Value="{DynamicResource ChatBox-MouseOver}" />
                                    <Setter Property="BorderBrush" TargetName="OnlineBorder"
                                            Value="{DynamicResource ChatBox-MouseOver}" />
                                </MultiTrigger.Setters>
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- MessagesInSearchStyle Resources -->
        <Style TargetType="{x:Type ListViewItem}" x:Key="MessagesInSearchStyle">
            <Setter Property="Margin" Value="0" />
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <Setter Property="MinWidth" Value="200" />
            <Setter Property="MaxWidth" Value="350" />

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListBoxItem">
                        <Border x:Name="border"
                                CornerRadius="5"
                                Background="{DynamicResource ChatBox-Normal}"
                                MinWidth="200"
                                MaxWidth="350"
                                Margin="0 0 0 10"
                                Height="78">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="64" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <Grid Column="0">
                                    <!-- Full circled Image 48x48 -->
                                    <Ellipse Width="48" Height="48">
                                        <Ellipse.Fill>
                                            <ImageBrush Stretch="UniformToFill"
                                                        RenderOptions.BitmapScalingMode="Fant"
                                                        ImageSource="{Binding LastMessage.Sender.PhotoUrl}" />
                                        </Ellipse.Fill>
                                    </Ellipse>
                                    <Border x:Name="OnlineBorder"
                                            Width="12"
                                            Height="12"
                                            BorderBrush="{DynamicResource ChatBox-Normal}"
                                            BorderThickness="2"
                                            CornerRadius="6"
                                            Background="{DynamicResource Settings-Change-Photo}"
                                            VerticalAlignment="Bottom"
                                            HorizontalAlignment="Right"
                                            Margin="0 0 3 3"
                                            Visibility="{Binding User.IsOnline, 
                                                Converter={StaticResource BooleanToVisibilityConverter}}" />
                                </Grid>
                                <Grid Column="1">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="*" />
                                        <RowDefinition Height="*" />
                                    </Grid.RowDefinitions>
                                    <Grid Grid.Row="0" HorizontalAlignment="Left">
                                        <TextBlock FontSize="14" FontFamily="{StaticResource Alata}"
                                                   FontWeight="Regular"
                                                   Foreground="{DynamicResource Strongest-Stroke}"
                                                   MaxHeight="19"
                                                   MaxWidth="274"
                                                   TextTrimming="CharacterEllipsis"
                                                   HorizontalAlignment="Left"
                                                   Margin="2,11,0,0">
                                            <TextBlock.Text>
                                                <MultiBinding Converter="{StaticResource ChatBoxNameConverter}">
                                                    <Binding Path="User.FirstName" />
                                                    <Binding Path="User.LastName" />
                                                </MultiBinding>
                                            </TextBlock.Text>
                                        </TextBlock>
                                    </Grid>
                                    <Grid Grid.Row="1">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition MaxWidth="220" Width="*" />
                                                <ColumnDefinition MaxWidth="28" Width="*" />
                                                <ColumnDefinition Width="Auto" />
                                            </Grid.ColumnDefinitions>
                                            <Grid Grid.Column="0">
                                                <TextBlock x:Name="MessageText"
                                                           Text="{Binding LastMessage.Text, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                           FontFamily="{StaticResource Alata}"
                                                           Foreground="{DynamicResource ChatBox-Foreground}"
                                                           FontWeight="Regular"
                                                           TextWrapping="Wrap"
                                                           TextTrimming="WordEllipsis"
                                                           FontSize="12"
                                                           MaxHeight="34"
                                                           MaxWidth="220"
                                                           HorizontalAlignment="Left"
                                                           VerticalAlignment="Top"
                                                           Margin="2,0,0,0" />
                                            </Grid>
                                            <Grid Grid.Column="2" HorizontalAlignment="Right">
                                                <TextBlock
                                                    Text="{Binding LastMessage.SentAt, Mode=TwoWay,
                                                    UpdateSourceTrigger=PropertyChanged, Converter={StaticResource DateTimeConverter}}"
                                                    FontSize="10"
                                                    FontFamily="{StaticResource Alata}"
                                                    FontWeight="Regular"
                                                    Foreground="{DynamicResource Litest-Stroke-Second}"
                                                    Margin="0 19 10 0" />
                                            </Grid>
                                        </Grid>
                                    </Grid>
                                </Grid>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Selector.IsSelectionActive" Value="False" />
                                    <Condition Property="Selector.IsSelected" Value="True" />
                                </MultiTrigger.Conditions>
                                <MultiTrigger.Setters>
                                    <Setter Property="Background" TargetName="border"
                                            Value="{DynamicResource ChatBox-Selected}" />
                                    <Setter Property="Foreground" TargetName="MessageText"
                                            Value="{DynamicResource Strongest-Stroke}" />
                                    <Setter Property="BorderBrush" TargetName="OnlineBorder"
                                            Value="{DynamicResource ChatBox-Selected}" />
                                </MultiTrigger.Setters>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Selector.IsSelectionActive" Value="True" />
                                    <Condition Property="Selector.IsSelected" Value="True" />
                                </MultiTrigger.Conditions>
                                <MultiTrigger.Setters>
                                    <Setter Property="Background" TargetName="border"
                                            Value="{DynamicResource ChatBox-Selected}" />
                                    <Setter Property="Foreground" TargetName="MessageText"
                                            Value="{DynamicResource Strongest-Stroke}" />
                                    <Setter Property="BorderBrush" TargetName="OnlineBorder"
                                            Value="{DynamicResource ChatBox-Selected}" />
                                </MultiTrigger.Setters>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="UIElement.IsMouseOver" Value="True" />
                                    <Condition Property="Selector.IsSelected" Value="False" />
                                </MultiTrigger.Conditions>
                                <MultiTrigger.Setters>
                                    <Setter Property="Background" TargetName="border"
                                            Value="{DynamicResource ChatBox-MouseOver}" />
                                    <Setter Property="BorderBrush" TargetName="OnlineBorder"
                                            Value="{DynamicResource ChatBox-MouseOver}" />
                                </MultiTrigger.Setters>
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- DialogMessagesStyle Resources -->
        <Style TargetType="Image" x:Key="ImageInMessageStyle">
            <EventSetter Event="PreviewMouseLeftButtonUp" Handler="OpenDialogGallery"/>
        </Style>
        <Style TargetType="{x:Type ListViewItem}" x:Key="DialogMessagesStyle">
            <Setter Property="Margin" Value="20 0 20 0" />
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="OverridesDefaultStyle" Value="True" />

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListBoxItem">
                        <Grid x:Name="ListBoxItemGrid">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <Border Grid.Row="0"
                                    x:Name="NewDateBorder"
                                    Background="{DynamicResource NewDate-Color}"
                                    CornerRadius="13"
                                    HorizontalAlignment="Center"
                                    Visibility="Collapsed"
                                    Margin="0 0 0 10">
                                <TextBlock Text="{Binding SentAt, Converter={StaticResource DateToDateConverter}}"
                                           FontSize="14"
                                           FontFamily="{StaticResource Alata}"
                                           FontWeight="Regular"
                                           Foreground="{DynamicResource Stronger-Stroke}"
                                           Margin="10 4"
                                           VerticalAlignment="Center"
                                           HorizontalAlignment="Center" />
                            </Border>
                            <StackPanel Grid.Row="1"
                                        x:Name="MessageStackPanel"
                                        Orientation="Horizontal" HorizontalAlignment="Left"
                                        Margin="0 0 0 4">
                                <Border x:Name="border"
                                        CornerRadius="5"
                                        Background="{DynamicResource ActiveChat-CompanionMessage}"
                                        MinWidth="61"
                                        MaxWidth="680"
                                        Margin="50 0 0 0">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition MaxWidth="630" Width="*" />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="*" />
                                        </Grid.ColumnDefinitions>
                                        <Grid Grid.Column="0">
                                            <Image x:Name="ImageInMessage"
                                                   Source="{Binding File}"
                                                   Margin="10 10 10 10"
                                                   MaxWidth="630"
                                                   Cursor="Hand"
                                                   Stretch="Uniform"
                                                   RenderOptions.BitmapScalingMode="Fant"
                                                   RenderOptions.EdgeMode="Aliased"
                                                   StretchDirection="DownOnly"
                                                   PreviewMouseLeftButtonUp="OpenDialogGallery" />
                                            <TextBox x:Name="TextInMessage"
                                                     Text="{Binding Text}"
                                                     IsReadOnly="True"
                                                     BorderThickness="0"
                                                     Background="Transparent"
                                                     Padding="-2 0 0 0"
                                                     TextWrapping="Wrap"
                                                     Foreground="{DynamicResource Strongest-Stroke}"
                                                     FontSize="14"
                                                     Margin="10 10 10 10" />
                                        </Grid>
                                        <TextBlock Grid.Column="1"
                                                   x:Name="SentAtTextBlock"
                                                   Text="{Binding SentAt, Converter={StaticResource DateTimeConverter}}"
                                                   Foreground="{DynamicResource Liter-Stroke-Second}"
                                                   FontSize="12"
                                                   Margin="0 0 5 3"
                                                   VerticalAlignment="Bottom" />
                                        <Image Grid.Column="2"
                                               x:Name="NonReadMessageImage"
                                               Resources="{StaticResource Icons}"
                                               Source="{DynamicResource NonReadMessageIcon}"
                                               Width="12"
                                               Height="10"
                                               Margin="0 0 8 6"
                                               VerticalAlignment="Bottom"
                                               Visibility="Collapsed" />
                                        <Image Grid.Column="2"
                                               x:Name="ReadMessageImage"
                                               Resources="{StaticResource Icons}"
                                               Source="{DynamicResource ReadMessageIcon}"
                                               Width="16"
                                               Height="10"
                                               Margin="0 0 4 6"
                                               VerticalAlignment="Bottom"
                                               Visibility="Collapsed" />
                                    </Grid>
                                </Border>
                            </StackPanel>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <DataTrigger Binding="{Binding NewDate}" Value="true">
                                <Setter TargetName="NewDateBorder" Property="Visibility" Value="Visible" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Text}" Value="{x:Null}">
                                <Setter TargetName="TextInMessage" Property="Visibility" Value="Collapsed" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding File}" Value="{x:Null}">
                                <Setter TargetName="ImageInMessage" Property="Visibility" Value="Collapsed" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding IsMyMessage, UpdateSourceTrigger=PropertyChanged}"
                                         Value="True">
                                <Setter TargetName="border" Property="Background"
                                        Value="{DynamicResource ActiveChat-OwnerMessage}" />
                                <Setter TargetName="border" Property="Margin" Value="0 0 50 0" />
                                <Setter TargetName="MessageStackPanel" Property="HorizontalAlignment" Value="Right" />
                                <Setter TargetName="SentAtTextBlock" Property="Foreground"
                                        Value="{DynamicResource Litest-Stroke-Second}" />
                                <Setter TargetName="NonReadMessageImage" Property="Visibility" Value="Visible" />
                            </DataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMyMessage, UpdateSourceTrigger=PropertyChanged}"
                                               Value="True" />
                                    <Condition Binding="{Binding IsRead, UpdateSourceTrigger=PropertyChanged}"
                                               Value="True" />
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.Setters>
                                    <Setter TargetName="border" Property="Background"
                                            Value="{DynamicResource ActiveChat-OwnerMessage}" />
                                    <Setter TargetName="border" Property="Margin" Value="0 0 50 0" />
                                    <Setter TargetName="MessageStackPanel" Property="HorizontalAlignment" Value="Right" />
                                    <Setter TargetName="SentAtTextBlock" Property="Foreground"
                                            Value="{DynamicResource Litest-Stroke-Second}" />
                                    <Setter TargetName="ReadMessageImage" Property="Visibility" Value="Visible" />
                                    <Setter TargetName="NonReadMessageImage" Property="Visibility" Value="Collapsed" />
                                </MultiDataTrigger.Setters>
                            </MultiDataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <Style.Resources>
                <ControlTemplate x:Key="FirstMyMessageTemplate">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <Border Grid.Row="0"
                                x:Name="NewDateBorder"
                                Background="{DynamicResource NewDate-Color}"
                                CornerRadius="13"
                                HorizontalAlignment="Center"
                                Visibility="Collapsed">
                            <TextBlock Text="{Binding SentAt, Converter={StaticResource DateToDateConverter}}"
                                       FontSize="14"
                                       FontFamily="{StaticResource Alata}"
                                       FontWeight="Regular"
                                       Foreground="{DynamicResource Stronger-Stroke}"
                                       Margin="10 4"
                                       VerticalAlignment="Center"
                                       HorizontalAlignment="Center" />
                        </Border>
                        <StackPanel Grid.Row="1" Orientation="Horizontal" HorizontalAlignment="Right"
                                    Margin="0 0 0 10">
                            <Border x:Name="border"
                                    CornerRadius="5"
                                    Background="{DynamicResource ActiveChat-OwnerMessage}"
                                    MinWidth="61"
                                    MaxWidth="680">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition MaxWidth="630" Width="*" />
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>
                                    <Grid Grid.Column="0">
                                        <Image x:Name="ImageInMessage"
                                               Source="{Binding File}"
                                               Margin="10 10 10 10"
                                               MaxWidth="630"
                                               Cursor="Hand"
                                               Stretch="Uniform"
                                               RenderOptions.BitmapScalingMode="Fant"
                                               RenderOptions.EdgeMode="Aliased"
                                               StretchDirection="DownOnly"
                                               Style="{StaticResource ImageInMessageStyle}" />
                                        <TextBox x:Name="TextInMessage"
                                                 Text="{Binding Text}"
                                                 IsReadOnly="True"
                                                 BorderThickness="0"
                                                 Background="Transparent"
                                                 Padding="-2 0 0 0"
                                                 TextWrapping="Wrap"
                                                 Foreground="{DynamicResource Strongest-Stroke}"
                                                 FontSize="14"
                                                 Margin="10 10 10 10" />
                                    </Grid>
                                    <TextBlock Grid.Column="1"
                                               Text="{Binding SentAt, Converter={StaticResource DateTimeConverter}}"
                                               Foreground="{DynamicResource Litest-Stroke-Second}"
                                               FontSize="12"
                                               Margin="0 0 5 3"
                                               VerticalAlignment="Bottom" />
                                    <Image Grid.Column="2"
                                           x:Name="NonReadMessageImage"
                                           Resources="{StaticResource Icons}"
                                           Source="{DynamicResource NonReadMessageIcon}"
                                           Width="12"
                                           Height="10"
                                           Margin="0 0 8 6"
                                           VerticalAlignment="Bottom"
                                           Visibility="Visible" />
                                    <Image Grid.Column="2"
                                           x:Name="ReadMessageImage"
                                           Resources="{StaticResource Icons}"
                                           Source="{DynamicResource ReadMessageIcon}"
                                           Width="16"
                                           Height="10"
                                           Margin="0 0 4 6"
                                           VerticalAlignment="Bottom"
                                           Visibility="Collapsed" />
                                </Grid>
                            </Border>

                            <Ellipse x:Name="SenderPhoto"
                                     Width="40"
                                     Height="40"
                                     Margin="10 0 0 0"
                                     VerticalAlignment="Bottom">
                                <Ellipse.Fill>
                                    <ImageBrush RenderOptions.BitmapScalingMode="Fant"
                                                ImageSource="{Binding Sender.PhotoUrl}" />
                                </Ellipse.Fill>
                            </Ellipse>
                        </StackPanel>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding NewDate}" Value="true">
                            <Setter TargetName="NewDateBorder" Property="Visibility" Value="Visible" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Text}" Value="{x:Null}">
                            <Setter TargetName="TextInMessage" Property="Visibility" Value="Collapsed" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding File}" Value="{x:Null}">
                            <Setter TargetName="ImageInMessage" Property="Visibility" Value="Collapsed" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsRead, UpdateSourceTrigger=PropertyChanged}"
                                     Value="True">
                            <Setter TargetName="ReadMessageImage" Property="Visibility" Value="Visible" />
                            <Setter TargetName="NonReadMessageImage" Property="Visibility" Value="Collapsed" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
                <ControlTemplate x:Key="FirstOpponentMessageTemplate">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <Border Grid.Row="0"
                                x:Name="NewDateBorder"
                                Background="{DynamicResource NewDate-Color}"
                                CornerRadius="13"
                                HorizontalAlignment="Center"
                                Visibility="Collapsed">
                            <TextBlock Text="{Binding SentAt, Converter={StaticResource DateToDateConverter}}"
                                       FontSize="14"
                                       FontFamily="{StaticResource Alata}"
                                       FontWeight="Regular"
                                       Foreground="{DynamicResource Stronger-Stroke}"
                                       Margin="10 4"
                                       VerticalAlignment="Center"
                                       HorizontalAlignment="Center" />
                        </Border>
                        <StackPanel Grid.Row="1" Orientation="Horizontal" HorizontalAlignment="Left"
                                    Margin="0 0 0 10">
                            <Ellipse x:Name="SenderPhoto"
                                     Width="40"
                                     Height="40"
                                     Margin="0 0 10 0"
                                     VerticalAlignment="Bottom">
                                <Ellipse.Fill>
                                    <ImageBrush RenderOptions.BitmapScalingMode="Fant"
                                                ImageSource="{Binding Sender.PhotoUrl}" />
                                </Ellipse.Fill>
                            </Ellipse>

                            <Border x:Name="border"
                                    CornerRadius="5"
                                    Background="{DynamicResource ActiveChat-CompanionMessage}"
                                    MinWidth="61">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition MaxWidth="630" Width="*" />
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>
                                    <Grid Grid.Column="0">
                                        <Image x:Name="ImageInMessage"
                                               Source="{Binding File}"
                                               Margin="10 10 10 10"
                                               MaxWidth="630"
                                               Cursor="Hand"
                                               Stretch="Uniform"
                                               RenderOptions.BitmapScalingMode="Fant"
                                               RenderOptions.EdgeMode="Aliased"
                                               StretchDirection="DownOnly"
                                               Style="{StaticResource ImageInMessageStyle}" />
                                        <TextBox x:Name="TextInMessage"
                                                 Text="{Binding Text}"
                                                 IsReadOnly="True"
                                                 BorderThickness="0"
                                                 Background="Transparent"
                                                 Padding="-2 0 0 0"
                                                 TextWrapping="Wrap"
                                                 Foreground="{DynamicResource Strongest-Stroke}"
                                                 FontSize="14"
                                                 Margin="10 10 10 10" />
                                    </Grid>
                                    <TextBlock Grid.Column="1"
                                               Text="{Binding SentAt, Converter={StaticResource DateTimeConverter}}"
                                               Foreground="{DynamicResource Liter-Stroke-Second}"
                                               FontSize="12"
                                               Margin="0 0 5 3"
                                               VerticalAlignment="Bottom" />
                                </Grid>
                            </Border>
                        </StackPanel>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding NewDate}" Value="true">
                            <Setter TargetName="NewDateBorder" Property="Visibility" Value="Visible" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Text}" Value="{x:Null}">
                            <Setter TargetName="TextInMessage" Property="Visibility" Value="Collapsed" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding File}" Value="{x:Null}">
                            <Setter TargetName="ImageInMessage" Property="Visibility" Value="Collapsed" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Style.Resources>

            <Style.Triggers>
                <DataTrigger Binding="{Binding IsMyPhotoVisible, UpdateSourceTrigger=PropertyChanged}" Value="True">
                    <Setter Property="Template" Value="{StaticResource FirstMyMessageTemplate}" />
                </DataTrigger>
                <DataTrigger Binding="{Binding IsCompanionPhotoVisible, UpdateSourceTrigger=PropertyChanged}"
                             Value="True">
                    <Setter Property="Template" Value="{StaticResource FirstOpponentMessageTemplate}" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <!-- SessionBox Resources -->
        <Style TargetType="{x:Type ListViewItem}" x:Key="SessionBox">
            <Setter Property="Margin" Value="0" />
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="OverridesDefaultStyle" Value="True" />

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListBoxItem">
                        <Border x:Name="border"
                                CornerRadius="5"
                                Background="{DynamicResource SessionBox-Normal}"
                                Margin="0 0 0 10"
                                Height="80">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="60" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <Grid Column="0">
                                    <Image
                                        Source="{Binding Path=Type,
                                           Converter={StaticResource ImageToSourceConverter}}"
                                        Width="50"
                                        Height="50"
                                        RenderOptions.BitmapScalingMode="Fant"
                                        VerticalAlignment="Center"
                                        HorizontalAlignment="Right" />
                                </Grid>
                                <Grid Column="1" Margin="10 10 0 0">
                                    <StackPanel Grid.Row="0">
                                        <DockPanel>
                                            <TextBlock
                                                Text="{Binding Type, Converter={StaticResource FistLetterToUpperConverter}}"
                                                FontFamily="{StaticResource Alata}"
                                                FontSize="14"
                                                Foreground="{DynamicResource Stronger-Stroke}"
                                                HorizontalAlignment="Left" />
                                            <Button DockPanel.Dock="Right"
                                                    x:Name="BtnCloseSession"
                                                    Style="{DynamicResource SessionCloseButton}"
                                                    Click="OnCloseSessionClick">
                                                <Image Width="14" Height="14"
                                                       Source="{DynamicResource CloseModalWindow}" />
                                            </Button>
                                        </DockPanel>
                                        <TextBlock Text="{Binding Label}"
                                                   FontFamily="{StaticResource Alata}"
                                                   FontSize="12"
                                                   Foreground="{DynamicResource Normal-Stroke}" />
                                        <TextBlock Text="{Binding Location}"
                                                   FontFamily="{StaticResource Alata}"
                                                   FontSize="12"
                                                   Foreground="{DynamicResource Litest-Stroke}" />
                                    </StackPanel>
                                </Grid>
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- BlackListBox Resources -->
        <Style TargetType="{x:Type ListViewItem}" x:Key="BlackListBox">
            <Setter Property="Margin" Value="0" />
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="OverridesDefaultStyle" Value="True" />

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListBoxItem">
                        <Border x:Name="border"
                                CornerRadius="5"
                                Background="{DynamicResource SessionBox-Normal}"
                                Margin="0 0 0 10"
                                Height="80">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="60" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <Grid Column="0">
                                    <Ellipse Grid.Column="0"
                                             Width="50"
                                             Height="50"
                                             VerticalAlignment="Center"
                                             HorizontalAlignment="Right">
                                        <Ellipse.Fill>
                                            <ImageBrush x:Name="BlockedUserPhoto"
                                                        RenderOptions.BitmapScalingMode="Fant"
                                                        Stretch="UniformToFill"
                                                        ImageSource="{Binding PhotoUrl}" />
                                        </Ellipse.Fill>
                                    </Ellipse>
                                </Grid>
                                <Grid Column="1" Margin="10 0 0 0">
                                    <StackPanel Grid.Row="0" VerticalAlignment="Center">
                                        <TextBlock FontFamily="{StaticResource Alata}"
                                                   FontSize="14"
                                                   Foreground="{DynamicResource Stronger-Stroke}"
                                                   Margin="0 0 0 2">
                                            <Run Text="{Binding FirstName}" />
                                            <Run Text="{Binding LastName}" />
                                        </TextBlock>
                                        <TextBlock Text="{Binding Username, StringFormat='@{0}'}"
                                                   FontFamily="{StaticResource Alata}"
                                                   FontSize="12"
                                                   Foreground="{DynamicResource Normal-Stroke}" />
                                    </StackPanel>
                                </Grid>
                                <Grid Grid.Column="2">
                                    <Button x:Name="BtnUnblockUser"
                                            Style="{DynamicResource UnblockUserButton}"
                                            FontFamily="{StaticResource Alata}"
                                            FontSize="12"
                                            Click="OnUnblockUserClick"
                                            VerticalAlignment="Center"
                                            Content="{x:Static language:lang.unblock_user}">
                                    </Button>
                                </Grid>
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- ContextMenu Resources -->
        <Style TargetType="ContextMenu">
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ContextMenu">
                        <Border CornerRadius="5"
                                BorderBrush="{DynamicResource Background-Element}"
                                BorderThickness="1"
                                Background="{DynamicResource Main}"
                                SnapsToDevicePixels="True">
                            <ItemsPresenter />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- ContextMenu Items -->
        <Style TargetType="MenuItem">
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <Setter Property="FontSize" Value="14" />
            <Setter Property="Foreground" Value="{DynamicResource Normal-Stroke}" />
            <Setter Property="FontFamily" Value="{StaticResource Alata}" />
            <Setter Property="FontWeight" Value="Regular" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="MenuItem">
                        <Border x:Name="Bd" Padding="0,0,0,0" SnapsToDevicePixels="True">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <Border x:Name="IconBorder" Grid.Column="0"
                                        Background="Transparent" Margin="14,0,10,0" SnapsToDevicePixels="True">
                                    <ContentPresenter x:Name="Icon" ContentSource="Icon" />
                                </Border>
                                <ContentPresenter x:Name="Header" Grid.Column="1" Margin="0,10,14,10"
                                                  ContentSource="Header"
                                                  SnapsToDevicePixels="True" />
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsHighlighted" Value="True">
                                <Setter Property="Background" TargetName="Bd"
                                        Value="{DynamicResource Background-Element}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Modal Window Resources -->
        <Style TargetType="{x:Type userControls:ModalWindow}" x:Key="ModalWindowStyle">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type userControls:ModalWindow}">
                        <Grid Background="{TemplateBinding Background}"
                              Visibility="{TemplateBinding IsOpen, Converter={StaticResource BooleanToVisibilityConverter}}">
                            <Border UseLayoutRounding="True" HorizontalAlignment="Center"
                                    VerticalAlignment="Center">
                                <ContentControl Content="{TemplateBinding Content}" />
                                <Border.Effect>
                                    <DropShadowEffect ShadowDepth="0"
                                                      BlurRadius="10"
                                                      Color="#FF000000" />
                                </Border.Effect>
                            </Border>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- ModalWindowTipStyle Resource -->
        <Style TargetType="{x:Type userControls:ModalWindow}" x:Key="UsernameCopiedTipStyle">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type userControls:ModalWindow}">
                        <Grid Background="{TemplateBinding Background}"
                              Visibility="{TemplateBinding IsOpen, Converter={StaticResource BooleanToVisibilityConverter}}">
                            <Border UseLayoutRounding="True" HorizontalAlignment="Center"
                                    VerticalAlignment="Center">
                                <ContentControl Content="{TemplateBinding Content}" />
                                <Border.Effect>
                                    <DropShadowEffect ShadowDepth="0"
                                                      BlurRadius="6"
                                                      Color="#FF000000" />
                                </Border.Effect>
                            </Border>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- CancelButton Resource -->
        <Style x:Key="CancelButton" TargetType="Button">
            <Setter Property="Background" Value="{DynamicResource Cancel}" />
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Name="Border" CornerRadius="5" Padding="8 3" BorderThickness="0"
                                Background="{TemplateBinding Background}">
                            <ContentPresenter VerticalAlignment="Center" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{DynamicResource Cancel-MouseOver}" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- ConfirmRedButton Resource -->
        <Style x:Key="ConfirmRedButton" TargetType="Button">
            <Setter Property="Background" Value="{DynamicResource Confirm-Red}" />
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Name="Border" CornerRadius="5" Padding="12 3" BorderThickness="0"
                                Background="{TemplateBinding Background}">
                            <ContentPresenter VerticalAlignment="Center" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{DynamicResource Confirm-Red-MouseOver}" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- ConfirmGreenButton Resource -->
        <Style x:Key="ConfirmGreenButton" TargetType="Button">
            <Setter Property="Background" Value="{DynamicResource Confirm-Green}" />
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Name="Border" CornerRadius="5" Padding="12 3" BorderThickness="0"
                                Background="{TemplateBinding Background}">
                            <ContentPresenter VerticalAlignment="Center" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{DynamicResource Confirm-Green-MouseOver}" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- ConfirmBlueButton Resource -->
        <Style x:Key="ConfirmBlueButton" TargetType="Button">
            <Setter Property="Background" Value="{DynamicResource Confirm-Blue}" />
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Name="Border" CornerRadius="5" Padding="12 3" BorderThickness="0"
                                Background="{TemplateBinding Background}">
                            <ContentPresenter VerticalAlignment="Center" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{DynamicResource Confirm-Blue-MouseOver}" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- RadioButtonStyle -->
        <Style x:Key="RadioButtonStyle" TargetType="RadioButton">
            <Setter Property="Height" Value="36" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="RadioButton">
                        <BulletDecorator x:Name="BulletDecorator" Cursor="Arrow" VerticalAlignment="Center" Height="36">
                            <BulletDecorator.Bullet>
                                <Grid Width="20" Height="20" Margin="10 8 0 0">
                                    <Border Name="RadioOuter" Background="Transparent"
                                            BorderBrush="{DynamicResource XamlIcons-Blue}"
                                            BorderThickness="2"
                                            CornerRadius="10" />
                                    <Border CornerRadius="10"
                                            Margin="5"
                                            Name="RadioMark"
                                            Background="{DynamicResource XamlIcons-Blue}"
                                            Visibility="Hidden" />
                                </Grid>
                            </BulletDecorator.Bullet>
                            <TextBlock Margin="20,0,0,0"
                                       Text="{TemplateBinding Content}"
                                       VerticalAlignment="Center">
                                <ContentPresenter />
                            </TextBlock>
                        </BulletDecorator>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter TargetName="RadioMark" Property="Visibility" Value="Visible" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="RadioMark" Property="Visibility" Value="Visible" />
                                <Setter TargetName="RadioMark" Property="Background"
                                        Value="{DynamicResource XamlIcons-Blue-MouseOver}" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="BulletDecorator" Property="Background"
                                        Value="{DynamicResource Background-Element}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- LoadingSpinner Style -->
        <Style TargetType="{x:Type userControls:LoadingSpinner}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type userControls:LoadingSpinner}">
                        <Ellipse x:Name="Ellipse"
                                 Width="40"
                                 Height="40"
                                 RenderTransformOrigin="0.5,0.5"
                                 Stroke="{DynamicResource ChatBox-MouseOver}"
                                 StrokeThickness="4"
                                 StrokeDashArray="12, 8"
                                 StrokeDashCap="Round">
                            <Ellipse.RenderTransform>
                                <TransformGroup>
                                    <RotateTransform x:Name="EllipseRotation" Angle="0" />
                                </TransformGroup>
                            </Ellipse.RenderTransform>
                            <Ellipse.Triggers>
                                <EventTrigger RoutedEvent="Ellipse.Loaded">
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="EllipseRotation"
                                                             Storyboard.TargetProperty="Angle"
                                                             From="0"
                                                             To="360"
                                                             Duration="0:0:1"
                                                             RepeatBehavior="Forever" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                            </Ellipse.Triggers>
                        </Ellipse>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- ScrollDownButton Style -->
        <Style TargetType="Button" x:Key="ScrollDownButtonStyle">
            <Setter Property="Background" Value="{DynamicResource ChatBox-MouseOver}" />
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Padding" Value="0" />
            <Setter Property="Margin" Value="0" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                CornerRadius="30"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Padding="{TemplateBinding Padding}"
                                Margin="{TemplateBinding Margin}">
                            <ContentPresenter HorizontalAlignment="Center"
                                              VerticalAlignment="Center" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background"
                                        Value="{DynamicResource ChatBox-Selected}" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background"
                                        Value="{DynamicResource MessagesCount-Border}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Application.Resources>
</Application>